{
  "swagger": "2.0",
  "info": {
    "title": "DEVinBank",
    "description": "Projeto Conta365, tem a finalidade de avaliar o conhecimento em NodeJS atráves da criação de APIs, manipulação de arquivos e capacidade de elaboração de soluções para problemas, e também criação de documentações. Esta API foi desenvolvida por Vitor dos Santos Pedra",
    "version": "1.0.0"
  },
  "host": "localhost:3333",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/finance/ids/{userid}": {
      "get": {
        "tags": [
          "finanças"
        ],
        "summary": "Retorna as despesas com ids",
        "description": "Utilize o userid, para retornar as despesas do usuário com suas id. Retorna erro adequado caso o usuário não exista.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/finance/{userid}": {
      "get": {
        "tags": [
          "finanças"
        ],
        "summary": "Retorna as despesas com base no userid e queries",
        "description": "Utilize o userid, para retornar as despesas do usuário, podendo usar uma das queries para retornar por mês/ano, Ex:Setembro/2022, ou por tipo, Ex:groceries, se as duas queries estiverem preenchidas retornará apenas por mês/ano. Retorna erro adequado caso o usuário não exista.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bymonthyear",
            "in": "query",
            "type": "string"
          },
          {
            "name": "expenses",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "finanças"
        ],
        "summary": "Cria uma conta365 e adiciona as finanças através dos dados do arquivo xlsx",
        "description": "Insira todos os dados de uma tabela excel em um usuário específico. A tabela deve conter os campos price, typeofexpenses, date e name. Nenhum campo pode estar vazio, ou retornará um erro.Caso o usuário existe mas não tenha registro de finanças será criado e inserido os dados do xlsx",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "Arquivo xlsx(excel)",
            "accept": "/"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/finance/{userid}/{financeid}": {
      "delete": {
        "tags": [
          "finanças"
        ],
        "summary": "Deleta uma despesa do usuário",
        "description": "Utilize o userid para especificar o usuário e o financeid para escolher a despesa a ser apagada. Retorna o usuário sem a despesa deletada",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "financeid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Usuários"
        ],
        "summary": "Retorna os dados de um usuário",
        "description": "Utilize o id para retornar o nome e o email do usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [
          "Usuários"
        ],
        "summary": "Atualiza os dados do usuário",
        "description": "Atualiza o usuário com o id indicado, o body deve conter o seguinte objeto{\"name\":\"seu nome aqui\", e/ou \"email\":\"seuemail@nesseformato.com\"}, valores incorretos geram erro, chaves erradas não são atualizadas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Usuários"
        ],
        "summary": "Cria um usuário",
        "description": "cria um usuário com id gerado automáticamente, o body deve conter o seguinte objeto{\"name\":\"Apenas Letras\",\"email\":\"seuemail@nesseformato.com.\"}, chaves e valores incorretos geram erros",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "default": [
    "http"
  ]
}